#!/bin/bash -e

cd $HOME/githaven/db

if [[ `whoami` = "git" && -z "$RAILS_ENV" ]] ; then
    export RAILS_ENV="production"
fi

ssh_command="${SSH_ORIGINAL_COMMAND}"

if [ -z "${ssh_command}" ] ; then
  echo "SSH_ORIGINAL_COMMAND is not set. Please report this error to the sysadmin." >&2
  exit 1;
fi

cmd=`echo "${ssh_command}" | grep '^git' | sed -e 's/\ .*//g' | sed -e 's/git.//g'`
if [[ "${cmd}" != "receive-pack" && "${cmd}" != "upload-pack" ]] ; then
  echo "Unauthorized command; aborting." >&2
  exit 1;
fi

user_id="${1}"
repopath=`echo ${ssh_command} | sed -e 's/.* //g' -e s/\'//g`
if [ "${cmd}" = "receive-pack" ] ; then
  githaven-checkpermissions "write" "${user_id}" "${repopath}"
elif [ "${cmd}" = "upload-pack" ] ; then
  githaven-checkpermissions "read" "${user_id}" "${repopath}"
fi

cd $HOME

# Create the repos directory if it does not exists
if [ ! -d repos ] ; then
  mkdir repos
fi
cd repos

# Create the repo if it does not exists
if [ ! -d "${repopath}" ] ; then
    mkdir -p "${repopath}"
    (cd "${repopath}"; git init --bare -q)
fi

git-shell -c "${SSH_ORIGINAL_COMMAND}"
